snippet c "const"
const $1 = $2
$0
endsnippet

snippet l "let"
let $1 = $2
$0
endsnippet

snippet i "import" b
import ${1} from '${2:./}${3:$1}'
endsnippet

snippet req "require"
require('${2:./}${3:$1}')$0
endsnippet

snippet e "export/export default" b
export ${1:default} $0
endsnippet

snippet edc "export default class" b
export default class ${1:`!v expand('%:t:r')`} extends $0
endsnippet

snippet C "Component"
Component $0
endsnippet

snippet PC "PureComponent"
PureComponent $0
endsnippet

snippet : "object value"
${1:key}: ${2:value},$0
endsnippet

snippet ret "return"
return $0
endsnippet

snippet => "arrow function"
(${1:props}) => $0
endsnippet

snippet f "function"
function ${1:`!v expand('%:t:r')`} (${2:props}) $0
endsnippet

snippet "\.(map|filter|forEach|reduce)" "array method with an arrow function" r
.`!p snip.rv = match.group(1)`(${1:args} => $0
endsnippet

snippet if "if statement"
if (${1:condition}) {
	${2:statement}
} $0
endsnippet

# react
snippet ir "ir" b
import React from 'react'
endsnippet

snippet irc "irc" b
import React, { Component } from 'react'
endsnippet

snippet irc "irp" b
import React, { PureComponent } from 'react'
endsnippet

snippet ipt "ipt" b
import PropTypes from 'prop-types'
endsnippet

snippet isc "isc" b
import styled from 'styled-components'
endsnippet

snippet is "is" b
import s from './index.css'
endsnippet

snippet cwm "cwm"
componentWillMount() {
	$0
}
endsnippet

snippet cdm "cdm"
componentDidMount() {
	$0
}
endsnippet

snippet pt "props types" b
${1:`!v expand('%:t:r')`.}propTypes = {
	${2}: PropTypes.${3:string}${4:.isRequired},$0
}
endsnippet

snippet PT "PropTypes"
$1: PropTypes.${2:string}${3:.isRequired},$0
endsnippet

snippet dp "default props" b
${1:`!v expand('%:t:r')`.}defaultProps = {
	$0
}
endsnippet

snippet con "con"
constructor(props${1:, context}) {
	super(props$1)
	$0
}
endsnippet

snippet ss "ss"
this.setState({$1: $2})$0
endsnippet

snippet ren "render ()"
render() {
	return ${1:(
		${2:<div$3>$4</div>}
	)}
}
endsnippet

snippet props "this.props"
this.props.$0
endsnippet

snippet state "this.state"
this.state.$0
endsnippet

snippet ref "ref"
ref={${1:ref} => this.${2:name} = $1}
endsnippet

snippet cn "className"
className=$0
endsnippet

snippet s "style={}"
style={{
	$1
}}
$0
endsnippet

snippet sc "styled component"
const $1 = styled.${2:div}\`
	$3
\`
$0
endsnippet

snippet pp "pp"
${props => props.$0}
endsnippet

snippet // "jsx comment"
{/* $1 */}$0
endsnippet

# helpers
snippet d "<div />"
<div$1>$2</div>$0
endsnippet

snippet /** "/**"
/** ${0:why?} */
endsnippet

snippet /**p "/**p"
/** ${0:why?}
*  @private */
endsnippet

snippet cl "console.log"
console.log('${2:$1: }', ${1})
endsnippet
